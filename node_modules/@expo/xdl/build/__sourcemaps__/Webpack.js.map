{"version":3,"sources":["Webpack.js"],"names":["HOST","getenv","string","DEFAULT_PORT","int","WEBPACK_LOG_TAG","let","webpackDevServerInstance","webpackServerPort","async","startAsync","projectRoot","options","BundlingOptions","deprecatedVerbose","XDLError","ProjectUtils","logError","env","config","await","createWebpackConfigAsync","getAvailablePortAsync","defaultPort","port","logInfo","chalk","underline","mode","protocol","https","urls","prepareUrls","useYarn","ConfigUtils","isUsingYarn","appName","getProjectNameAsync","nonInteractive","validateBoolOption","process","stdout","isTTY","Promise","resolve","compiler","createWebpackCompiler","webpack","onFinished","WebpackDevServer","devServer","listen","error","onWebpackFinished","ProjectSettings","setPackagerInfoAsync","host","ip","address","url","server","stopAsync","close","openAsync","Web","openProjectAsync","bundleAsync","warnings","reject","run","stats","messages","message","formatWebpackMessages","errors","toJson","all","length","Error","join","CI","toLowerCase","console","log","yellow","green","red","exp","readConfigJsonAsync","webName","getNameFromConfig","getServer","getPort","getUrlAsync","getProtocolAsync","readAsync","choosePort","setMode","BABEL_ENV","NODE_ENV","name","value","defaultValue","transformCLIOptions","isImageEditingEnabled","pwa","isPolyfillEnabled","polyfill","fullOptions","isValidationEnabled","Doctor","validateWebSupportAsync","getWebpackConfigEnvFromBundlingOptionsAsync","invokeWebpackConfigAsync","applyOptionsToProjectSettingsAsync","newSettings","dev","Object","keys","setAsync","isDebugInfoEnabled","isInfoEnabled","development","production","info","webpackEnv"],"mappings":"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","file":"../Webpack.js","sourcesContent":["/**\n * @flow\n */\nimport * as ConfigUtils from '@expo/config';\nimport chalk from 'chalk';\nimport formatWebpackMessages from 'react-dev-utils/formatWebpackMessages';\nimport { choosePort, prepareUrls } from 'react-dev-utils/WebpackDevServerUtils';\nimport webpack from 'webpack';\nimport WebpackDevServer from 'webpack-dev-server';\n\nimport getenv from 'getenv';\nimport createWebpackCompiler from './createWebpackCompiler';\nimport ip from './ip';\nimport * as Doctor from './project/Doctor';\nimport * as ProjectUtils from './project/ProjectUtils';\nimport * as ProjectSettings from './ProjectSettings';\nimport * as Web from './Web';\nimport XDLError from './XDLError';\nimport type { User as ExpUser } from './User'; //eslint-disable-line\n\nexport const HOST = getenv.string('WEB_HOST', '0.0.0.0');\nexport const DEFAULT_PORT = getenv.int('WEB_PORT', 19006);\nconst WEBPACK_LOG_TAG = 'expo';\n\nlet webpackDevServerInstance: WebpackDevServer | null = null;\nlet webpackServerPort: number | null = null;\n\nexport type BundlingOptions = {\n  isValidationEnabled?: boolean,\n  isImageEditingEnabled?: boolean,\n  isDebugInfoEnabled?: boolean,\n  isPolyfillEnabled?: boolean,\n  webpackEnv?: Object,\n  mode?: 'development' | 'production' | 'test' | 'none',\n  https?: boolean,\n  nonInteractive?: boolean,\n  onWebpackFinished?: (error: Error) => void,\n  port?: number,\n};\n\nexport async function startAsync(\n  projectRoot: string,\n  options: BundlingOptions = {},\n  deprecatedVerbose?: boolean\n): Promise<{ url: string, server: WebpackDevServer }> {\n  if (typeof deprecatedVerbose !== 'undefined') {\n    throw new XDLError(\n      'WEBPACK_DEPRECATED',\n      'startAsync(root, options, verbose): The `verbose` option is deprecated.'\n    );\n  }\n\n  if (webpackDevServerInstance) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, 'Webpack is already running.');\n    return;\n  }\n\n  const { env, config } = await createWebpackConfigAsync(projectRoot, options);\n\n  webpackServerPort = await getAvailablePortAsync({\n    defaultPort: options.port,\n  });\n\n  ProjectUtils.logInfo(\n    projectRoot,\n    WEBPACK_LOG_TAG,\n    `Starting Webpack on port ${webpackServerPort} in ${chalk.underline(env.mode)} mode.`\n  );\n\n  const protocol = env.https ? 'https' : 'http';\n  const urls = prepareUrls(protocol, '::', webpackServerPort);\n  const useYarn = ConfigUtils.isUsingYarn(projectRoot);\n  const appName = await getProjectNameAsync(projectRoot);\n  const nonInteractive = validateBoolOption(\n    'nonInteractive',\n    options.nonInteractive,\n    process.stdout.isTTY\n  );\n\n  await new Promise(resolve => {\n    // Create a webpack compiler that is configured with custom messages.\n    const compiler = createWebpackCompiler({\n      projectRoot,\n      nonInteractive,\n      webpack,\n      appName,\n      config,\n      urls,\n      useYarn,\n      onFinished: resolve,\n    });\n    webpackDevServerInstance = new WebpackDevServer(compiler, config.devServer);\n    // Launch WebpackDevServer.\n    webpackDevServerInstance.listen(webpackServerPort, HOST, error => {\n      if (error) {\n        ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, error);\n      }\n      if (typeof options.onWebpackFinished === 'function') {\n        options.onWebpackFinished(error);\n      }\n    });\n  });\n\n  await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n    webpackServerPort,\n  });\n\n  const host = ip.address();\n  return {\n    url: `${protocol}://${host}:${webpackServerPort}`,\n    server: webpackDevServerInstance,\n    port: webpackServerPort,\n    protocol,\n    host,\n  };\n}\n\nexport async function stopAsync(projectRoot: string): Promise<void> {\n  if (webpackDevServerInstance) {\n    await new Promise(resolve => webpackDevServerInstance.close(() => resolve()));\n    webpackDevServerInstance = null;\n    webpackServerPort = null;\n    await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n      webpackServerPort: null,\n    });\n  }\n}\n\nexport async function openAsync(projectRoot: string, options: BundlingOptions): Promise<void> {\n  if (!webpackDevServerInstance) {\n    await startAsync(projectRoot, options);\n  }\n  await Web.openProjectAsync(projectRoot);\n}\n\nexport async function bundleAsync(projectRoot: string, options: BundlingOptions): Promise<void> {\n  const { config } = await createWebpackConfigAsync(projectRoot, options);\n\n  const compiler = webpack(config);\n\n  try {\n    // We generate the stats.json file in the webpack-config\n    const { warnings } = await new Promise((resolve, reject) =>\n      compiler.run((error, stats) => {\n        let messages;\n        if (error) {\n          if (!error.message) {\n            return reject(error);\n          }\n          messages = formatWebpackMessages({\n            errors: [error.message],\n            warnings: [],\n          });\n        } else {\n          messages = formatWebpackMessages(\n            stats.toJson({ all: false, warnings: true, errors: true })\n          );\n        }\n\n        if (messages.errors.length) {\n          // Only keep the first error. Others are often indicative\n          // of the same problem, but confuse the reader with noise.\n          if (messages.errors.length > 1) {\n            messages.errors.length = 1;\n          }\n          return reject(new Error(messages.errors.join('\\n\\n')));\n        }\n        if (\n          process.env.CI &&\n          (typeof process.env.CI !== 'string' || process.env.CI.toLowerCase() !== 'false') &&\n          messages.warnings.length\n        ) {\n          console.log(\n            chalk.yellow(\n              '\\nTreating warnings as errors because process.env.CI = true.\\n' +\n                'Most CI servers set it automatically.\\n'\n            )\n          );\n          return reject(new Error(messages.warnings.join('\\n\\n')));\n        }\n\n        resolve({\n          stats,\n          warnings: messages.warnings,\n        });\n      })\n    );\n\n    if (warnings.length) {\n      console.log(chalk.yellow('Compiled with warnings.\\n'));\n      console.log(warnings.join('\\n\\n'));\n    } else {\n      console.log(chalk.green('Compiled successfully.\\n'));\n    }\n  } catch (error) {\n    console.log(chalk.red('Failed to compile.\\n'));\n    throw error;\n  }\n}\n\nexport async function getProjectNameAsync(projectRoot: string): Promise<string> {\n  const { exp } = await ProjectUtils.readConfigJsonAsync(projectRoot);\n  const { webName } = ConfigUtils.getNameFromConfig(exp);\n  return webName;\n}\n\nexport function getServer(projectRoot: string): WebpackDevServer | null {\n  if (webpackDevServerInstance == null) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, 'Webpack is not running.');\n  }\n  return webpackDevServerInstance;\n}\n\nexport function getPort(): number | null {\n  return webpackServerPort;\n}\n\nexport async function getUrlAsync(projectRoot: string): Promise<string> {\n  const devServer = getServer(projectRoot);\n  if (!devServer) {\n    return null;\n  }\n  const host = ip.address();\n  const protocol = await getProtocolAsync(projectRoot);\n  return `${protocol}://${host}:${webpackServerPort}`;\n}\n\nexport async function getProtocolAsync(projectRoot: string): Promise<'http' | 'https'> {\n  // TODO: Bacon: Handle when not in expo\n  const { https } = await ProjectSettings.readAsync(projectRoot);\n  return https === true ? 'https' : 'http';\n}\n\nexport async function getAvailablePortAsync(\n  options: { host: string, defaultPort: number } = {}\n): Promise<number> {\n  try {\n    return await choosePort(options.host || HOST, options.defaultPort || DEFAULT_PORT);\n  } catch (error) {\n    throw new XDLError('NO_PORT_FOUND', 'No available port found: ' + error.message);\n  }\n}\n\nexport function setMode(mode: 'development' | 'production' | 'test' | 'none'): void {\n  process.env.BABEL_ENV = mode;\n  process.env.NODE_ENV = mode;\n}\n\nfunction validateBoolOption(name, value, defaultValue) {\n  if (typeof value === 'undefined') {\n    value = defaultValue;\n  }\n\n  if (typeof value !== 'boolean') {\n    throw new XDLError('WEBPACK_INVALID_OPTION', `'${name}' option must be a boolean.`);\n  }\n\n  return value;\n}\n\nfunction transformCLIOptions(options) {\n  // Transform the CLI flags into more explicit values\n  return {\n    ...options,\n    isImageEditingEnabled: options.pwa,\n    isPolyfillEnabled: options.polyfill,\n  };\n}\n\nasync function createWebpackConfigAsync(\n  projectRoot: string,\n  options: BundlingOptions = {}\n): Promise<{ env: Object, config: WebpackDevServer.Configuration }> {\n  const fullOptions = transformCLIOptions(options);\n  if (validateBoolOption('isValidationEnabled', fullOptions.isValidationEnabled, true)) {\n    await Doctor.validateWebSupportAsync(projectRoot);\n  }\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, fullOptions);\n\n  setMode(env.mode);\n\n  const config = await Web.invokeWebpackConfigAsync(env);\n\n  return { env, config };\n}\n\nasync function applyOptionsToProjectSettingsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n) /*: ProjectSettings */ {\n  let newSettings = {};\n  // Change settings before reading them\n  if (typeof options.https === 'boolean') {\n    newSettings.https = options.https;\n  }\n  if (typeof options.dev === 'boolean') {\n    newSettings.dev = options.dev;\n  }\n\n  if (Object.keys(newSettings).length) {\n    await ProjectSettings.setAsync(projectRoot, newSettings);\n  }\n\n  return await ProjectSettings.readAsync(projectRoot);\n}\n\nasync function getWebpackConfigEnvFromBundlingOptionsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<Object> {\n  let { dev, https } = await applyOptionsToProjectSettingsAsync(projectRoot, options);\n\n  const mode = typeof options.mode === 'string' ? options.mode : dev ? 'development' : 'production';\n\n  const isImageEditingEnabled = validateBoolOption(\n    'isImageEditingEnabled',\n    options.isImageEditingEnabled,\n    true\n  );\n  const isDebugInfoEnabled = validateBoolOption(\n    'isDebugInfoEnabled',\n    options.isDebugInfoEnabled,\n    Web.isInfoEnabled()\n  );\n\n  return {\n    projectRoot,\n    pwa: isImageEditingEnabled,\n    mode,\n    https,\n    polyfill: validateBoolOption('isPolyfillEnabled', options.isPolyfillEnabled, false),\n    development: dev,\n    production: !dev,\n    info: isDebugInfoEnabled,\n    ...(options.webpackEnv || {}),\n  };\n}\n"],"sourceRoot":"/@expo/xdl@56.2.0/src"}